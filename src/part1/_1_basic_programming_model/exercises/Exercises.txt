1.1.1 +
    a) 7.5 if double, 7 if integer
    b) 200.2
    c) true

1.1.2 +
    a) type: double, value: 1.618
    b) type: double, value: 10.0
    c) type: boolean, value: true
    d) type: String, value: 33

1.1.3 +

1.1.4 +
    a) No such word "then"
    b) missed parentheses for condition
    c) OK
    d) missed ";" after "c = 0"

1.1.5 +

1.1.6 +
Program will print:
    0
    1
    1
    2
    3
    5
    8
    13
    21
    34
    55
    89
    144
    233
    377
    610

It's Fibonacci's numbers

1.1.7
    a) 3,00009
    b) 499500
    c) error if N not defined;
        1023 if i instead of N;
        10000 if 1000 instead of N;

1.1.8 +
    a) b
    b) 197, because operation add is used
    c) e, because explicit cast is used after operation add

1.1.9 +

1.1.10 +
    Memory for array "a" isn't allocated

1.1.11 +

1.1.12 +
    Code prints:
    0 1 2 3 4 5 6 7 8 9

1.1.13 +

1.1.14 +

1.1.15 +

1.1.16 +
    value is "311361142246"

1.1.17 +
    Infinite recursion. Base case must be first.

1.1.18 +
  1:
    mystery(2, 25) = 50
    mystery(3, 11) = 33
  2:
    mystery(2, 25) = 33554432
    mystery(3, 11) = 177147

1.1.19 +

1.1.20 +

1.1.21 +

1.1.22 +

1.1.23 +

1.1.24 +
    105 24
    24 9
    9 6
    6 3
    3 0

    gcd is 3

    Extended code (see Euclid.java)

1.1.25